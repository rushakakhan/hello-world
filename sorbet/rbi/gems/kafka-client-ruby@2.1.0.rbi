# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `kafka-client-ruby` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module KafkaClientRuby
  class << self
    def i_solemnly_swear_streaming_platform_does_not_want_this_data; end
    def should_emit_usage_log; end
  end
end

class KafkaClientRuby::AggregateClient < ::KafkaClientRuby::LoggingClient
  def broker_exception; end
  def brokers_and_certs; end
  def logged_cluster; end
  def missing_cert_exception; end
  def missing_key_exception; end
end

class KafkaClientRuby::Client
  extend(::Forwardable)

  def initialize(**options); end

  def async_producer(*args, &block); end
  def close; end
  def consumer(*args, &block); end
  def deliver_message(*args, &block); end
  def describe_group(*args, &block); end
  def each_message(*args, &block); end
  def fetch_messages(*args, &block); end
  def groups(*args, &block); end
  def producer(*args, &block); end
  def with_aggregate_cluster; end
  def with_regional_cluster; end
end

class KafkaClientRuby::Error < ::StandardError
end

class KafkaClientRuby::LoggingClient
  extend(::Forwardable)

  def initialize(**options); end

  def alter_configs(*args, &block); end
  def alter_topic(*args, &block); end
  def async_producer(**options); end
  def broker_exception; end
  def brokers_and_certs; end
  def close; end
  def consumer(**options); end
  def create_partitions_for(*args, &block); end
  def create_topic(*args, &block); end
  def delete_topic(*args, &block); end
  def deliver_message(msg, **options); end
  def describe_configs(*args, &block); end
  def describe_group(*args, &block); end
  def describe_topic(*args, &block); end
  def has_topic?(*args, &block); end
  def last_offset_for(*args, &block); end
  def last_offsets_for(*args, &block); end
  def missing_cert_exception; end
  def missing_key_exception; end
  def normalize_seed_broker(*args, &block); end
  def partitions_for(*args, &block); end
  def producer(**options); end
  def supports_api?(*args, &block); end
  def topics(*args, &block); end

  protected

  def log_api_call(function); end
end

class KafkaClientRuby::MissingBrokersEnvVariable < ::KafkaClientRuby::Error
  def initialize(*env_list); end
end

class KafkaClientRuby::MissingCertFile < ::KafkaClientRuby::Error
  def initialize(key_var, cert_var); end
end

class KafkaClientRuby::MissingKeyFile < ::KafkaClientRuby::Error
  def initialize(key_var, cert_var); end
end

class KafkaClientRuby::RegionalClient < ::KafkaClientRuby::LoggingClient
  def broker_exception; end
  def brokers_and_certs; end
  def logged_cluster; end
  def missing_cert_exception; end
  def missing_key_exception; end
end

KafkaClientRuby::VERSION = T.let(T.unsafe(nil), String)

class KafkaClientRubyRailtie < ::Rails::Railtie
end
