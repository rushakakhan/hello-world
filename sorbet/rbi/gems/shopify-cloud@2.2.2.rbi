# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `shopify-cloud` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module ShopifyCloud
  class << self
    def railtie_helpers_paths; end
    def railtie_namespace; end
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end
    def table_name_prefix; end
    def use_relative_model_naming?; end
  end
end

module ShopifyCloud::ActiveJobBufferedLogging
  class << self
    def included(base); end
  end
end

class ShopifyCloud::AssetUploader
  def initialize(bucket = T.unsafe(nil), manifests = T.unsafe(nil)); end

  def asset_directory(*_, &_); end
  def bucket; end
  def default_bucket(*_, &_); end
  def manifests; end
  def run; end

  private

  def asset_options(asset); end
  def backoff_time(retry_number); end
  def cache_control_for_asset(asset); end
  def cloudplatform_path(asset); end
  def consume_in_parallel(assets); end
  def content_type(asset); end
  def different_cache_control?(asset, bucket_file); end
  def gzip_exists?(asset); end
  def statsd_time; end
  def upload(asset); end
  def upload_asset?(asset, bucket_file); end

  class << self
    def asset_directory; end
    def default_bucket; end
  end
end

ShopifyCloud::AssetUploader::APPLICATION_NAME = T.let(T.unsafe(nil), String)

ShopifyCloud::AssetUploader::BUCKET = T.let(T.unsafe(nil), String)

ShopifyCloud::AssetUploader::MAXIMUM_BACKOFF_TIME = T.let(T.unsafe(nil), Integer)

ShopifyCloud::AssetUploader::MAXIMUM_RETRY_NUMBER = T.let(T.unsafe(nil), Integer)

ShopifyCloud::AssetUploader::PROJECT = T.let(T.unsafe(nil), String)

class ShopifyCloud::Engine < ::Rails::Engine
end

class ShopifyCloud::LogSubscriber < ::ActiveSupport::Subscriber
  def process_action(event); end

  private

  def application_custom_logs(event); end
end

class ShopifyCloud::PingController < ::ActionController::Metal
  def ping; end

  class << self
    def middleware_stack; end
  end
end

class ShopifyCloud::SewingKitManifest
  def assets; end
  def dir; end

  private

  def manifest; end
  def manifest_path; end
end

class ShopifyCloud::ShopifyControllerLogSubscriber < ::ActionController::LogSubscriber
  def start_processing(event); end

  class << self
    def remove_framework_default_subscriptions; end
  end
end

module ShopifyCloud::Status
  extend(::ShopifyCloud::Status)

  def active?(*_, &_); end
  def location; end
  def maintenance?(*_, &_); end
  def standby?(*_, &_); end
  def state; end
  def to_h; end

  private

  def env(var); end
end

class ShopifyCloud::StatusController < ::ActionController::Base
  def status; end

  private

  def _layout(lookup_context, formats); end

  class << self
    def _helpers; end
    def middleware_stack; end
  end
end

class ShopifyCloud::WebpackerManifest
  def assets; end
  def dir; end
end
