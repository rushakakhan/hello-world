# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `user_agent_parser` gem.
# Please instead update this file by running `tapioca generate`.

# typed: true

module UserAgentParser
  class << self
    def parse(user_agent_string, options = T.unsafe(nil)); end
  end
end

UserAgentParser::DefaultPatternsPath = T.let(T.unsafe(nil), String)

class UserAgentParser::Device
  def initialize(family = T.unsafe(nil), model = T.unsafe(nil), brand = T.unsafe(nil)); end

  def ==(other); end
  def brand; end
  def eql?(other); end
  def family; end
  def inspect; end
  def model; end
  def name; end
  def to_h; end
  def to_s; end
end

UserAgentParser::Device::DEFAULT_FAMILY = T.let(T.unsafe(nil), String)

class UserAgentParser::OperatingSystem
  def initialize(family = T.unsafe(nil), version = T.unsafe(nil)); end

  def ==(other); end
  def eql?(other); end
  def family; end
  def inspect; end
  def name; end
  def to_h; end
  def to_s; end
  def version; end
end

UserAgentParser::OperatingSystem::DEFAULT_FAMILY = T.let(T.unsafe(nil), String)

class UserAgentParser::Parser
  def initialize(options = T.unsafe(nil)); end

  def parse(user_agent); end
  def patterns_path; end

  private

  def device_from_pattern_match(pattern, match); end
  def first_pattern_match(patterns, value); end
  def from_pattern_match(keys, pattern, match); end
  def interpolate(replacement, match); end
  def load_patterns(path); end
  def os_from_pattern_match(pattern, match); end
  def parse_device(user_agent); end
  def parse_os(user_agent); end
  def parse_ua(user_agent, os = T.unsafe(nil), device = T.unsafe(nil)); end
  def user_agent_from_pattern_match(pattern, match, os = T.unsafe(nil), device = T.unsafe(nil)); end
  def version_from_segments(*segments); end

  class << self
    def load_patterns(path); end
  end
end

class UserAgentParser::UserAgent
  def initialize(family = T.unsafe(nil), version = T.unsafe(nil), os = T.unsafe(nil), device = T.unsafe(nil)); end

  def ==(other); end
  def device; end
  def eql?(other); end
  def family; end
  def inspect; end
  def name; end
  def os; end
  def to_h; end
  def to_s; end
  def version; end
end

UserAgentParser::UserAgent::DEFAULT_FAMILY = T.let(T.unsafe(nil), String)

class UserAgentParser::Version
  def initialize(*args); end

  def ==(other); end
  def eql?(other); end
  def inspect; end
  def major; end
  def minor; end
  def patch; end
  def patch_minor; end
  def segments; end
  def to_h; end
  def to_s; end
  def version; end
end

UserAgentParser::Version::SEGMENTS_REGEX = T.let(T.unsafe(nil), Regexp)
